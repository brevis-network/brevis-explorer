// source: statistics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.zk.master.AddProofUserRequest', null, global);
goog.exportSymbol('proto.zk.master.AddProofUserResponse', null, global);
goog.exportSymbol('proto.zk.master.AppInfo', null, global);
goog.exportSymbol('proto.zk.master.DailyStatistic', null, global);
goog.exportSymbol('proto.zk.master.GetAppDataRequest', null, global);
goog.exportSymbol('proto.zk.master.GetAppDataResponse', null, global);
goog.exportSymbol('proto.zk.master.GetAppInfosRequest', null, global);
goog.exportSymbol('proto.zk.master.GetAppInfosResponse', null, global);
goog.exportSymbol('proto.zk.master.GetAppRequestNumByAppNameResponse', null, global);
goog.exportSymbol('proto.zk.master.GetUniqAddressRequest', null, global);
goog.exportSymbol('proto.zk.master.GetUniqAddressResponse', null, global);
goog.exportSymbol('proto.zk.master.UserAddress', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetAppInfosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zk.master.GetAppInfosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetAppInfosRequest.displayName = 'proto.zk.master.GetAppInfosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetAppInfosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.GetAppInfosResponse.repeatedFields_, null);
};
goog.inherits(proto.zk.master.GetAppInfosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetAppInfosResponse.displayName = 'proto.zk.master.GetAppInfosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.AppInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.AppInfo.repeatedFields_, null);
};
goog.inherits(proto.zk.master.AppInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.AppInfo.displayName = 'proto.zk.master.AppInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetAppDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.GetAppDataRequest.repeatedFields_, null);
};
goog.inherits(proto.zk.master.GetAppDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetAppDataRequest.displayName = 'proto.zk.master.GetAppDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetAppDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.GetAppDataResponse.repeatedFields_, null);
};
goog.inherits(proto.zk.master.GetAppDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetAppDataResponse.displayName = 'proto.zk.master.GetAppDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.DailyStatistic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zk.master.DailyStatistic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.DailyStatistic.displayName = 'proto.zk.master.DailyStatistic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetAppRequestNumByAppNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.GetAppRequestNumByAppNameResponse.repeatedFields_, null);
};
goog.inherits(proto.zk.master.GetAppRequestNumByAppNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetAppRequestNumByAppNameResponse.displayName = 'proto.zk.master.GetAppRequestNumByAppNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.UserAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zk.master.UserAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.UserAddress.displayName = 'proto.zk.master.UserAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.AddProofUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.AddProofUserRequest.repeatedFields_, null);
};
goog.inherits(proto.zk.master.AddProofUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.AddProofUserRequest.displayName = 'proto.zk.master.AddProofUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.AddProofUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zk.master.AddProofUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.AddProofUserResponse.displayName = 'proto.zk.master.AddProofUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetUniqAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.GetUniqAddressRequest.repeatedFields_, null);
};
goog.inherits(proto.zk.master.GetUniqAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetUniqAddressRequest.displayName = 'proto.zk.master.GetUniqAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zk.master.GetUniqAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zk.master.GetUniqAddressResponse.repeatedFields_, null);
};
goog.inherits(proto.zk.master.GetUniqAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zk.master.GetUniqAddressResponse.displayName = 'proto.zk.master.GetUniqAddressResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetAppInfosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetAppInfosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetAppInfosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppInfosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetAppInfosRequest}
 */
proto.zk.master.GetAppInfosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetAppInfosRequest;
  return proto.zk.master.GetAppInfosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetAppInfosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetAppInfosRequest}
 */
proto.zk.master.GetAppInfosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetAppInfosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetAppInfosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetAppInfosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppInfosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.GetAppInfosResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetAppInfosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetAppInfosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetAppInfosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppInfosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && common_pb.ErrorMsg.toObject(includeInstance, f),
    appsList: jspb.Message.toObjectList(msg.getAppsList(),
    proto.zk.master.AppInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetAppInfosResponse}
 */
proto.zk.master.GetAppInfosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetAppInfosResponse;
  return proto.zk.master.GetAppInfosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetAppInfosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetAppInfosResponse}
 */
proto.zk.master.GetAppInfosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ErrorMsg;
      reader.readMessage(value,common_pb.ErrorMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.zk.master.AppInfo;
      reader.readMessage(value,proto.zk.master.AppInfo.deserializeBinaryFromReader);
      msg.addApps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetAppInfosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetAppInfosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetAppInfosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppInfosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ErrorMsg.serializeBinaryToWriter
    );
  }
  f = message.getAppsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.zk.master.AppInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional zk.common.ErrorMsg err = 1;
 * @return {?proto.zk.common.ErrorMsg}
 */
proto.zk.master.GetAppInfosResponse.prototype.getErr = function() {
  return /** @type{?proto.zk.common.ErrorMsg} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMsg, 1));
};


/**
 * @param {?proto.zk.common.ErrorMsg|undefined} value
 * @return {!proto.zk.master.GetAppInfosResponse} returns this
*/
proto.zk.master.GetAppInfosResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zk.master.GetAppInfosResponse} returns this
 */
proto.zk.master.GetAppInfosResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zk.master.GetAppInfosResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated AppInfo apps = 2;
 * @return {!Array<!proto.zk.master.AppInfo>}
 */
proto.zk.master.GetAppInfosResponse.prototype.getAppsList = function() {
  return /** @type{!Array<!proto.zk.master.AppInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zk.master.AppInfo, 2));
};


/**
 * @param {!Array<!proto.zk.master.AppInfo>} value
 * @return {!proto.zk.master.GetAppInfosResponse} returns this
*/
proto.zk.master.GetAppInfosResponse.prototype.setAppsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.zk.master.AppInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zk.master.AppInfo}
 */
proto.zk.master.GetAppInfosResponse.prototype.addApps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.zk.master.AppInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.GetAppInfosResponse} returns this
 */
proto.zk.master.GetAppInfosResponse.prototype.clearAppsList = function() {
  return this.setAppsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.AppInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.AppInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.AppInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.AppInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.AppInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iconUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vkhashesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.AppInfo}
 */
proto.zk.master.AppInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.AppInfo;
  return proto.zk.master.AppInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.AppInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.AppInfo}
 */
proto.zk.master.AppInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVkhashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.AppInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.AppInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.AppInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.AppInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVkhashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.zk.master.AppInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.AppInfo} returns this
 */
proto.zk.master.AppInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string icon_url = 2;
 * @return {string}
 */
proto.zk.master.AppInfo.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.AppInfo} returns this
 */
proto.zk.master.AppInfo.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string vkHashes = 3;
 * @return {!Array<string>}
 */
proto.zk.master.AppInfo.prototype.getVkhashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.zk.master.AppInfo} returns this
 */
proto.zk.master.AppInfo.prototype.setVkhashesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.zk.master.AppInfo} returns this
 */
proto.zk.master.AppInfo.prototype.addVkhashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.AppInfo} returns this
 */
proto.zk.master.AppInfo.prototype.clearVkhashesList = function() {
  return this.setVkhashesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.GetAppDataRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetAppDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetAppDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetAppDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appNamesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    startTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetAppDataRequest}
 */
proto.zk.master.GetAppDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetAppDataRequest;
  return proto.zk.master.GetAppDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetAppDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetAppDataRequest}
 */
proto.zk.master.GetAppDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAppNames(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetAppDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetAppDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetAppDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * repeated string app_names = 1;
 * @return {!Array<string>}
 */
proto.zk.master.GetAppDataRequest.prototype.getAppNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.zk.master.GetAppDataRequest} returns this
 */
proto.zk.master.GetAppDataRequest.prototype.setAppNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.zk.master.GetAppDataRequest} returns this
 */
proto.zk.master.GetAppDataRequest.prototype.addAppNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.GetAppDataRequest} returns this
 */
proto.zk.master.GetAppDataRequest.prototype.clearAppNamesList = function() {
  return this.setAppNamesList([]);
};


/**
 * optional uint64 start_time = 2;
 * @return {number}
 */
proto.zk.master.GetAppDataRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.zk.master.GetAppDataRequest} returns this
 */
proto.zk.master.GetAppDataRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 end_time = 3;
 * @return {number}
 */
proto.zk.master.GetAppDataRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.zk.master.GetAppDataRequest} returns this
 */
proto.zk.master.GetAppDataRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.GetAppDataResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetAppDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetAppDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetAppDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && common_pb.ErrorMsg.toObject(includeInstance, f),
    dailyStatisticList: jspb.Message.toObjectList(msg.getDailyStatisticList(),
    proto.zk.master.DailyStatistic.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetAppDataResponse}
 */
proto.zk.master.GetAppDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetAppDataResponse;
  return proto.zk.master.GetAppDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetAppDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetAppDataResponse}
 */
proto.zk.master.GetAppDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ErrorMsg;
      reader.readMessage(value,common_pb.ErrorMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.zk.master.DailyStatistic;
      reader.readMessage(value,proto.zk.master.DailyStatistic.deserializeBinaryFromReader);
      msg.addDailyStatistic(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetAppDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetAppDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetAppDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ErrorMsg.serializeBinaryToWriter
    );
  }
  f = message.getDailyStatisticList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.zk.master.DailyStatistic.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional zk.common.ErrorMsg err = 1;
 * @return {?proto.zk.common.ErrorMsg}
 */
proto.zk.master.GetAppDataResponse.prototype.getErr = function() {
  return /** @type{?proto.zk.common.ErrorMsg} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMsg, 1));
};


/**
 * @param {?proto.zk.common.ErrorMsg|undefined} value
 * @return {!proto.zk.master.GetAppDataResponse} returns this
*/
proto.zk.master.GetAppDataResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zk.master.GetAppDataResponse} returns this
 */
proto.zk.master.GetAppDataResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zk.master.GetAppDataResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated DailyStatistic daily_statistic = 2;
 * @return {!Array<!proto.zk.master.DailyStatistic>}
 */
proto.zk.master.GetAppDataResponse.prototype.getDailyStatisticList = function() {
  return /** @type{!Array<!proto.zk.master.DailyStatistic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zk.master.DailyStatistic, 2));
};


/**
 * @param {!Array<!proto.zk.master.DailyStatistic>} value
 * @return {!proto.zk.master.GetAppDataResponse} returns this
*/
proto.zk.master.GetAppDataResponse.prototype.setDailyStatisticList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.zk.master.DailyStatistic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zk.master.DailyStatistic}
 */
proto.zk.master.GetAppDataResponse.prototype.addDailyStatistic = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.zk.master.DailyStatistic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.GetAppDataResponse} returns this
 */
proto.zk.master.GetAppDataResponse.prototype.clearDailyStatisticList = function() {
  return this.setDailyStatisticList([]);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.zk.master.GetAppDataResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.GetAppDataResponse} returns this
 */
proto.zk.master.GetAppDataResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.DailyStatistic.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.DailyStatistic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.DailyStatistic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.DailyStatistic.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0),
    date: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.DailyStatistic}
 */
proto.zk.master.DailyStatistic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.DailyStatistic;
  return proto.zk.master.DailyStatistic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.DailyStatistic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.DailyStatistic}
 */
proto.zk.master.DailyStatistic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.DailyStatistic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.DailyStatistic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.DailyStatistic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.DailyStatistic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 num = 1;
 * @return {number}
 */
proto.zk.master.DailyStatistic.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zk.master.DailyStatistic} returns this
 */
proto.zk.master.DailyStatistic.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string date = 2;
 * @return {string}
 */
proto.zk.master.DailyStatistic.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.DailyStatistic} returns this
 */
proto.zk.master.DailyStatistic.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetAppRequestNumByAppNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetAppRequestNumByAppNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && common_pb.ErrorMsg.toObject(includeInstance, f),
    appRequestsNumList: jspb.Message.toObjectList(msg.getAppRequestsNumList(),
    proto.zk.master.GetAppDataResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetAppRequestNumByAppNameResponse}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetAppRequestNumByAppNameResponse;
  return proto.zk.master.GetAppRequestNumByAppNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetAppRequestNumByAppNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetAppRequestNumByAppNameResponse}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ErrorMsg;
      reader.readMessage(value,common_pb.ErrorMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.zk.master.GetAppDataResponse;
      reader.readMessage(value,proto.zk.master.GetAppDataResponse.deserializeBinaryFromReader);
      msg.addAppRequestsNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetAppRequestNumByAppNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetAppRequestNumByAppNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ErrorMsg.serializeBinaryToWriter
    );
  }
  f = message.getAppRequestsNumList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.zk.master.GetAppDataResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional zk.common.ErrorMsg err = 1;
 * @return {?proto.zk.common.ErrorMsg}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.getErr = function() {
  return /** @type{?proto.zk.common.ErrorMsg} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMsg, 1));
};


/**
 * @param {?proto.zk.common.ErrorMsg|undefined} value
 * @return {!proto.zk.master.GetAppRequestNumByAppNameResponse} returns this
*/
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zk.master.GetAppRequestNumByAppNameResponse} returns this
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GetAppDataResponse app_requests_num = 2;
 * @return {!Array<!proto.zk.master.GetAppDataResponse>}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.getAppRequestsNumList = function() {
  return /** @type{!Array<!proto.zk.master.GetAppDataResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zk.master.GetAppDataResponse, 2));
};


/**
 * @param {!Array<!proto.zk.master.GetAppDataResponse>} value
 * @return {!proto.zk.master.GetAppRequestNumByAppNameResponse} returns this
*/
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.setAppRequestsNumList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.zk.master.GetAppDataResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zk.master.GetAppDataResponse}
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.addAppRequestsNum = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.zk.master.GetAppDataResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.GetAppRequestNumByAppNameResponse} returns this
 */
proto.zk.master.GetAppRequestNumByAppNameResponse.prototype.clearAppRequestsNumList = function() {
  return this.setAppRequestsNumList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.UserAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.UserAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.UserAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.UserAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    appVkHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eoa: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    proofTime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.UserAddress}
 */
proto.zk.master.UserAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.UserAddress;
  return proto.zk.master.UserAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.UserAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.UserAddress}
 */
proto.zk.master.UserAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppVkHash(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEoa(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProofTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.UserAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.UserAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.UserAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.UserAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppVkHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getProofTime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string app_vk_hash = 1;
 * @return {string}
 */
proto.zk.master.UserAddress.prototype.getAppVkHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.UserAddress} returns this
 */
proto.zk.master.UserAddress.prototype.setAppVkHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.zk.master.UserAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.UserAddress} returns this
 */
proto.zk.master.UserAddress.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool eoa = 3;
 * @return {boolean}
 */
proto.zk.master.UserAddress.prototype.getEoa = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.zk.master.UserAddress} returns this
 */
proto.zk.master.UserAddress.prototype.setEoa = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.zk.master.UserAddress} returns this
 */
proto.zk.master.UserAddress.prototype.clearEoa = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zk.master.UserAddress.prototype.hasEoa = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 proof_time = 4;
 * @return {number}
 */
proto.zk.master.UserAddress.prototype.getProofTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.zk.master.UserAddress} returns this
 */
proto.zk.master.UserAddress.prototype.setProofTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.AddProofUserRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.AddProofUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.AddProofUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.AddProofUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.AddProofUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userAddressesList: jspb.Message.toObjectList(msg.getUserAddressesList(),
    proto.zk.master.UserAddress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.AddProofUserRequest}
 */
proto.zk.master.AddProofUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.AddProofUserRequest;
  return proto.zk.master.AddProofUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.AddProofUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.AddProofUserRequest}
 */
proto.zk.master.AddProofUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.zk.master.UserAddress;
      reader.readMessage(value,proto.zk.master.UserAddress.deserializeBinaryFromReader);
      msg.addUserAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.AddProofUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.AddProofUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.AddProofUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.AddProofUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.zk.master.UserAddress.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserAddress user_addresses = 1;
 * @return {!Array<!proto.zk.master.UserAddress>}
 */
proto.zk.master.AddProofUserRequest.prototype.getUserAddressesList = function() {
  return /** @type{!Array<!proto.zk.master.UserAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zk.master.UserAddress, 1));
};


/**
 * @param {!Array<!proto.zk.master.UserAddress>} value
 * @return {!proto.zk.master.AddProofUserRequest} returns this
*/
proto.zk.master.AddProofUserRequest.prototype.setUserAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.zk.master.UserAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zk.master.UserAddress}
 */
proto.zk.master.AddProofUserRequest.prototype.addUserAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.zk.master.UserAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.AddProofUserRequest} returns this
 */
proto.zk.master.AddProofUserRequest.prototype.clearUserAddressesList = function() {
  return this.setUserAddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.AddProofUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.AddProofUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.AddProofUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.AddProofUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && common_pb.ErrorMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.AddProofUserResponse}
 */
proto.zk.master.AddProofUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.AddProofUserResponse;
  return proto.zk.master.AddProofUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.AddProofUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.AddProofUserResponse}
 */
proto.zk.master.AddProofUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ErrorMsg;
      reader.readMessage(value,common_pb.ErrorMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.AddProofUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.AddProofUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.AddProofUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.AddProofUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ErrorMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional zk.common.ErrorMsg err = 1;
 * @return {?proto.zk.common.ErrorMsg}
 */
proto.zk.master.AddProofUserResponse.prototype.getErr = function() {
  return /** @type{?proto.zk.common.ErrorMsg} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMsg, 1));
};


/**
 * @param {?proto.zk.common.ErrorMsg|undefined} value
 * @return {!proto.zk.master.AddProofUserResponse} returns this
*/
proto.zk.master.AddProofUserResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zk.master.AddProofUserResponse} returns this
 */
proto.zk.master.AddProofUserResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zk.master.AddProofUserResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.GetUniqAddressRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetUniqAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetUniqAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetUniqAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetUniqAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appNamesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    startTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetUniqAddressRequest}
 */
proto.zk.master.GetUniqAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetUniqAddressRequest;
  return proto.zk.master.GetUniqAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetUniqAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetUniqAddressRequest}
 */
proto.zk.master.GetUniqAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAppNames(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetUniqAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetUniqAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetUniqAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetUniqAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * repeated string app_names = 1;
 * @return {!Array<string>}
 */
proto.zk.master.GetUniqAddressRequest.prototype.getAppNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.zk.master.GetUniqAddressRequest} returns this
 */
proto.zk.master.GetUniqAddressRequest.prototype.setAppNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.zk.master.GetUniqAddressRequest} returns this
 */
proto.zk.master.GetUniqAddressRequest.prototype.addAppNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.GetUniqAddressRequest} returns this
 */
proto.zk.master.GetUniqAddressRequest.prototype.clearAppNamesList = function() {
  return this.setAppNamesList([]);
};


/**
 * optional uint64 start_time = 2;
 * @return {number}
 */
proto.zk.master.GetUniqAddressRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.zk.master.GetUniqAddressRequest} returns this
 */
proto.zk.master.GetUniqAddressRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 end_time = 3;
 * @return {number}
 */
proto.zk.master.GetUniqAddressRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.zk.master.GetUniqAddressRequest} returns this
 */
proto.zk.master.GetUniqAddressRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zk.master.GetUniqAddressResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zk.master.GetUniqAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zk.master.GetUniqAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zk.master.GetUniqAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetUniqAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && common_pb.ErrorMsg.toObject(includeInstance, f),
    dailyStatisticList: jspb.Message.toObjectList(msg.getDailyStatisticList(),
    proto.zk.master.DailyStatistic.toObject, includeInstance),
    type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zk.master.GetUniqAddressResponse}
 */
proto.zk.master.GetUniqAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zk.master.GetUniqAddressResponse;
  return proto.zk.master.GetUniqAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zk.master.GetUniqAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zk.master.GetUniqAddressResponse}
 */
proto.zk.master.GetUniqAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ErrorMsg;
      reader.readMessage(value,common_pb.ErrorMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.zk.master.DailyStatistic;
      reader.readMessage(value,proto.zk.master.DailyStatistic.deserializeBinaryFromReader);
      msg.addDailyStatistic(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zk.master.GetUniqAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zk.master.GetUniqAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zk.master.GetUniqAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zk.master.GetUniqAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ErrorMsg.serializeBinaryToWriter
    );
  }
  f = message.getDailyStatisticList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.zk.master.DailyStatistic.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional zk.common.ErrorMsg err = 1;
 * @return {?proto.zk.common.ErrorMsg}
 */
proto.zk.master.GetUniqAddressResponse.prototype.getErr = function() {
  return /** @type{?proto.zk.common.ErrorMsg} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMsg, 1));
};


/**
 * @param {?proto.zk.common.ErrorMsg|undefined} value
 * @return {!proto.zk.master.GetUniqAddressResponse} returns this
*/
proto.zk.master.GetUniqAddressResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zk.master.GetUniqAddressResponse} returns this
 */
proto.zk.master.GetUniqAddressResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zk.master.GetUniqAddressResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated DailyStatistic daily_statistic = 2;
 * @return {!Array<!proto.zk.master.DailyStatistic>}
 */
proto.zk.master.GetUniqAddressResponse.prototype.getDailyStatisticList = function() {
  return /** @type{!Array<!proto.zk.master.DailyStatistic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zk.master.DailyStatistic, 2));
};


/**
 * @param {!Array<!proto.zk.master.DailyStatistic>} value
 * @return {!proto.zk.master.GetUniqAddressResponse} returns this
*/
proto.zk.master.GetUniqAddressResponse.prototype.setDailyStatisticList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.zk.master.DailyStatistic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zk.master.DailyStatistic}
 */
proto.zk.master.GetUniqAddressResponse.prototype.addDailyStatistic = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.zk.master.DailyStatistic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zk.master.GetUniqAddressResponse} returns this
 */
proto.zk.master.GetUniqAddressResponse.prototype.clearDailyStatisticList = function() {
  return this.setDailyStatisticList([]);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.zk.master.GetUniqAddressResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.zk.master.GetUniqAddressResponse} returns this
 */
proto.zk.master.GetUniqAddressResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.zk.master);
